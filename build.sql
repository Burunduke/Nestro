-- MySQL Script generated by MySQL Workbench
-- Wed Oct  4 14:31:35 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Nestro
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Nestro` ;

-- -----------------------------------------------------
-- Schema Nestro
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Nestro` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `Nestro` ;

-- -----------------------------------------------------
-- Table `Nestro`.`enterprise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`enterprise` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `location` VARCHAR(45) NULL,
  `parent` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`stationary_fuel_burn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`stationary_fuel_burn` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fuel_consumption` FLOAT NULL,
  `fuel_emissions` FLOAT NULL,
  `oxi_coef` FLOAT NULL,
  `trans_coef` FLOAT NULL,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `z_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `stationary_fuel_burn-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`mixed_coefs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`mixed_coefs` (
  `chem_formula` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NULL,
  `carbon_units` INT NULL,
  PRIMARY KEY (`chem_formula`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`stationary_gas_coef`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`stationary_gas_coef` (
  `id` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `chem_formula` VARCHAR(45) NOT NULL,
  `chem_content` FLOAT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `chem_formula`),
  INDEX `stationary_chem_coef_idx` (`chem_formula` ASC) VISIBLE,
  CONSTRAINT `stationary_chem_coef`
    FOREIGN KEY (`chem_formula`)
    REFERENCES `Nestro`.`mixed_coefs` (`chem_formula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`stationary_gas_burn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`stationary_gas_burn` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fuel_consumption` FLOAT NULL,
  `fuel_emission_coef` FLOAT NULL,
  `oxi_coef` FLOAT NULL,
  `CO2_emission` FLOAT NULL,
  `enterprise_id` INT NULL,
  `gas_coef_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `v_idx` (`enterprise_id` ASC) VISIBLE,
  INDEX `gas_coef_idx` (`gas_coef_id` ASC) VISIBLE,
  CONSTRAINT `stationary_gas_burn-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `gas_coef`
    FOREIGN KEY (`gas_coef_id`)
    REFERENCES `Nestro`.`stationary_gas_coef` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`torch_fuel_coef`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`torch_fuel_coef` (
  `id` INT NOT NULL,
  `chem_formula` VARCHAR(45) NOT NULL,
  `chem_content` FLOAT NULL DEFAULT 0,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`, `chem_formula`),
  INDEX `stationary_chem_coef_idx` (`chem_formula` ASC) VISIBLE,
  CONSTRAINT `stationary_chem_coef0`
    FOREIGN KEY (`chem_formula`)
    REFERENCES `Nestro`.`mixed_coefs` (`chem_formula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`torch_fuel_burn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`torch_fuel_burn` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fuel_consumption` FLOAT NULL,
  `enterprise_id` INT NULL,
  `coef_id` INT NULL,
  `CO2_emission` FLOAT NULL,
  `CH4_emission` FLOAT NULL,
  `unburn_coef` FLOAT NULL DEFAULT 0.02,
  `rho_CO2` FLOAT NULL DEFAULT 1.8393,
  `rho_CH4` FLOAT NULL DEFAULT 0.668,
  PRIMARY KEY (`id`),
  INDEX `enterpise_id_idx` (`enterprise_id` ASC) VISIBLE,
  INDEX `torch_fuel_coef_fk_idx` (`coef_id` ASC) VISIBLE,
  CONSTRAINT `torch_fuel_burn-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `torch_fuel_coef_fk`
    FOREIGN KEY (`coef_id`)
    REFERENCES `Nestro`.`torch_fuel_coef` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`fugitive_emissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`fugitive_emissions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fuel_consumption` FLOAT NULL,
  `CO2_coef` FLOAT NULL,
  `CH4_coef` FLOAT NULL,
  `result_CO2` FLOAT NULL,
  `result_CH4` FLOAT NULL,
  `enterprise_id` INT NULL,
  `rho_CO2` FLOAT NULL DEFAULT 1.8393,
  `rho_CH4` FLOAT NULL DEFAULT 0.668,
  PRIMARY KEY (`id`),
  INDEX `enterpise_id_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `fugitive_emissions-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_water_CH4`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_water_CH4` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `B0` FLOAT NULL DEFAULT 0.6,
  `corr_coef` FLOAT NULL DEFAULT 0.3,
  `volume` FLOAT NULL,
  `organic_coef` FLOAT NULL,
  `organic_waste` FLOAT NULL DEFAULT 0,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `enterpise_id_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `waste_water_CH4-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_water_N2O`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_water_N2O` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `prot` FLOAT NULL,
  `N_waste` FLOAT NULL DEFAULT 0,
  `N_coef` FLOAT NULL DEFAULT 0.16,
  `uncons_prot` FLOAT NULL DEFAULT 1.2,
  `ind_prot` FLOAT NULL DEFAULT 1.25,
  `waste_coef` FLOAT NULL DEFAULT 0.05,
  `trans_coef` FLOAT NULL DEFAULT (44/28),
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `enterpise_id_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `wastewater_N2O-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_burn_coef`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_burn_coef` (
  `comp` VARCHAR(45) NOT NULL,
  `dry_coef` FLOAT NULL,
  `carbon_coef` FLOAT NULL DEFAULT 0,
  `fossil_coef` FLOAT NULL DEFAULT 0,
  PRIMARY KEY (`comp`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_burn_mixed_coef`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_burn_mixed_coef` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comp` VARCHAR(45) NOT NULL,
  `portion` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `comp`),
  INDEX `waste_burn_coef_idx` (`comp` ASC) VISIBLE,
  CONSTRAINT `waste_burn_coef`
    FOREIGN KEY (`comp`)
    REFERENCES `Nestro`.`waste_burn_coef` (`comp`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_burn_CO2_mixed`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_burn_CO2_mixed` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mass` FLOAT NULL,
  `comp_coef` FLOAT NULL,
  `oxi_coef` FLOAT NULL DEFAULT 1,
  `coef_id` INT NULL,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `zxc_idx` (`enterprise_id` ASC) VISIBLE,
  INDEX `waste_burn_coef_idx` (`coef_id` ASC) VISIBLE,
  CONSTRAINT `waste_burn_CO2-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `waste_burn_coef_mixed`
    FOREIGN KEY (`coef_id`)
    REFERENCES `Nestro`.`waste_burn_mixed_coef` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_burn_N2O`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_burn_N2O` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mass` FLOAT NULL,
  `emission_coef` FLOAT NULL,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `zxcz_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `waste_burn_N2O-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`transport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`transport` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fuel_volume` FLOAT NULL,
  `rho` FLOAT NULL,
  `CO2_coef` FLOAT NULL,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `zxcx_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `transport-enteprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`acquired_emienergy_emissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`acquired_emienergy_emissions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `energy_cons` FLOAT NULL,
  `coef` FLOAT NULL,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `zxczxc_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `indirect_emissions-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`all_gas_emissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`all_gas_emissions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `gas_name` ENUM('CO2', 'CH4', 'N2O', 'CHF3', 'CF4', 'C2F6', 'SF6') NOT NULL,
  `amount` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `enterpise_id_idx` (`enterprise_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `all_gas_emissions-enterprise`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_burn_CO2_liquid`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_burn_CO2_liquid` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mass` FLOAT NULL,
  `carbon_coef` FLOAT NULL,
  `oxi_coef` FLOAT NULL DEFAULT 1,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `zxc_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `waste_burn_CO2-enterprise0`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`waste_burn_CO2_solid`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`waste_burn_CO2_solid` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mass` FLOAT NULL,
  `dry_coef` FLOAT NULL,
  `carbon_coef` FLOAT NULL,
  `fossil_coef` FLOAT NULL,
  `oxi_coef` FLOAT NULL DEFAULT 1,
  `result` FLOAT NULL,
  `enterprise_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `zxc_idx` (`enterprise_id` ASC) VISIBLE,
  CONSTRAINT `waste_burn_CO2-enterprise1`
    FOREIGN KEY (`enterprise_id`)
    REFERENCES `Nestro`.`enterprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Nestro`.`gas_emission_coefs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Nestro`.`gas_emission_coefs` (
  `gas_name` VARCHAR(45) NOT NULL,
  `coef` INT NULL,
  PRIMARY KEY (`gas_name`))
ENGINE = InnoDB;

USE `Nestro`;

DELIMITER $$
USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`stationary_fuel_burn_BEFORE_INSERT` BEFORE INSERT ON `stationary_fuel_burn` FOR EACH ROW
BEGIN
	set new.result = new.fuel_consumption * new.fuel_emissions * new.oxi_coef * new.trans_coef;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`stationary_fuel_burn_AFTER_INSERT` AFTER INSERT ON `stationary_fuel_burn` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE TRIGGER stationary_gas_coef_calc
BEFORE INSERT ON stationary_gas_burn
FOR EACH ROW
BEGIN
	set @s = (SELECT SUM(mc.carbon_units * sgc.chem_content)
        FROM mixed_coefs mc
        JOIN stationary_gas_coef sgc ON mc.chem_formula = sgc.chem_formula
        WHERE sgc.id = NEW.gas_coef_id);
    SET new.fuel_emission_coef = @s * 1.8393 / 100;
    SET new.CO2_emission = new.fuel_consumption * new.fuel_emission_coef * new.oxi_coef;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`stationary_gas_burn_AFTER_INSERT` AFTER INSERT ON `stationary_gas_burn` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', NEW.CO2_emission, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`torch_fuel_burn_BEFORE_INSERT` BEFORE INSERT ON `torch_fuel_burn` FOR EACH ROW
BEGIN
	set @s = (SELECT SUM(mc.carbon_units * tfc.chem_content)
        FROM mixed_coefs mc
        JOIN torch_fuel_coef tfc ON mc.chem_formula = tfc.chem_formula
        WHERE tfc.id = NEW.coef_id);
	set @CH4_content = 
		(select chem_content
        from torch_fuel_coef tfcon
        where tfcon.id = new.coef_id and tfcon.chem_formula = 'CH4'
		);
	set new.CO2_emission = new.fuel_consumption * @s * (1-new.unburn_coef)*new.rho_CO2/100;
    set new.CH4_emission = new.fuel_consumption * @CH4_content * new.unburn_coef * new.rho_CH4 / 100;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`torch_fuel_burn_AFTER_INSERT` AFTER INSERT ON `torch_fuel_burn` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', NEW.CO2_emission, new.enterprise_id);
    INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CH4', NEW.CH4_emission, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`fugitive_emissions_BEFORE_INSERT` BEFORE INSERT ON `fugitive_emissions` FOR EACH ROW
BEGIN
	set new.result_CO2 = NEW.fuel_consumption * new.CO2_coef * new.rho_CO2 / 100;
    set new.result_CH4 = NEW.fuel_consumption * new.CH4_coef * new.rho_CH4 / 100;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`fugitive_emissions_AFTER_INSERT` AFTER INSERT ON `fugitive_emissions` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2',new.result_CO2 , new.enterprise_id);
    INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CH4',new.result_CH4 , new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_water_CH4_BEFORE_INSERT` BEFORE INSERT ON `waste_water_CH4` FOR EACH ROW
BEGIN
	set new.result = (new.volume * new.organic_coef / 1000 - new.organic_waste) * new.corr_coef * new.B0 /1000;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_water_CH4_AFTER_INSERT` AFTER INSERT ON `waste_water_CH4` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CH4', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_water_N2O_BEFORE_INSERT` BEFORE INSERT ON `waste_water_N2O` FOR EACH ROW
BEGIN
	set new.result = (new.prot * new.N_coef * new.uncons_prot * new.ind_prot - new.N_waste) * new.waste_coef * new.trans_coef /1000;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_water_N2O_AFTER_INSERT` AFTER INSERT ON `waste_water_N2O` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('N2O', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_CO2_mixed_BEFORE_INSERT` BEFORE INSERT ON `waste_burn_CO2_mixed` FOR EACH ROW
BEGIN
	set new.comp_coef = (SELECT SUM(wbmc.portion * wbc.dry_coef * wbc.carbon_coef * wbc.fossil_coef)
        FROM waste_burn_mixed_coef wbmc
        JOIN waste_burn_coef wbc ON wbmc.comp = wbc.comp
        WHERE wbmc.id = NEW.coef_id);

		set new.result = NEW.mass * new.comp_coef  * new.oxi_coef * 1000 * 44 / 12;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_CO2_mixed_AFTER_INSERT` AFTER INSERT ON `waste_burn_CO2_mixed` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_N2O_BEFORE_INSERT` BEFORE INSERT ON `waste_burn_N2O` FOR EACH ROW
BEGIN
	set new.result = NEW.mass * new.emission_coef;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_N2O_AFTER_INSERT` AFTER INSERT ON `waste_burn_N2O` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('N2O', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`transport_BEFORE_INSERT` BEFORE INSERT ON `transport` FOR EACH ROW
BEGIN
	set new.result = new.fuel_volume * new.rho * new.CO2_coef / 1000;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`transport_AFTER_INSERT` AFTER INSERT ON `transport` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`acquired_emienergy_emissions_BEFORE_INSERT` BEFORE INSERT ON `acquired_emienergy_emissions` FOR EACH ROW
BEGIN
	set new.result = new.energy_cons * new.coef;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`acquired_emienergy_emissions_AFTER_INSERT` AFTER INSERT ON `acquired_emienergy_emissions` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_CO2_liquid_BEFORE_INSERT` BEFORE INSERT ON `waste_burn_CO2_liquid` FOR EACH ROW
BEGIN
	set new.result = new.mass * new.carbon_coef * new.oxi_coef;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_CO2_liquid_AFTER_INSERT` AFTER INSERT ON `waste_burn_CO2_liquid` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', new.result, new.enterprise_id);
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_CO2_solid_BEFORE_INSERT` BEFORE INSERT ON `waste_burn_CO2_solid` FOR EACH ROW
BEGIN
		set new.result = NEW.mass * new.dry_coef * new.carbon_coef * new.fossil_coef * new.oxi_coef * 1000 * 44 / 12;
END$$

USE `Nestro`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Nestro`.`waste_burn_CO2_solid_AFTER_INSERT` AFTER INSERT ON `waste_burn_CO2_solid` FOR EACH ROW
BEGIN
	INSERT into all_gas_emissions (gas_name, amount, enterprise_id) VALUES ('CO2', new.result, new.enterprise_id);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
